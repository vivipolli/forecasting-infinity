name: Deploy to PROD Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y python3-pip

      - name: Create .ssh directory
        run: mkdir -p ~/.ssh

      - name: Deploy to server
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          ssh-keyscan -p ${{ secrets.SERVER_PORT }} ${{ secrets.SERVER_PROD_VALIDATOR_IP }} >> ~/.ssh/known_hosts
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-add - <<< "${{ secrets.SSH_STAGE_PRIVATE_KEY }}"
          ssh -o StrictHostKeyChecking=no root@${{ secrets.SERVER_PROD_VALIDATOR_IP }} -p ${{ secrets.SERVER_PORT }} << 'EOF'
          cd /root/if-games-validator
          git pull --rebase
          source venv/bin/activate
          pip install -r requirements.txt
          pm2 delete validator
          cp validator.db /root/validator-db/validator1.db
          export INLINE_LOGS=1
          export API_ACCESS_KEYS=${{ secrets.API_ACCESS_KEYS_PROD }}
          pm2 start neurons/validator.py --name validator --interpreter python3 -- --netuid 6 --subtensor.network finney --wallet.name ifkey --wallet.hotkey ifhkey --logging.debug
          EOF

  discord_alerts:
    runs-on: ubuntu-latest

    needs: [deploy]

    if: always()

    steps:
      - name: Alert failure
        if: needs.deploy.result == 'failure'
        run: |
          WEBHOOK_URL="${{ secrets.DISCORD_DEPLOY }}"
          MESSAGE="Deploy validator PROD failed"
          curl -H "Content-Type: application/json" \
          -d "{\"content\": \"$MESSAGE\"}" \
          $WEBHOOK_URL

      - name: Alert deployment completed
        if: needs.deploy.result == 'success'
        run: |
          WEBHOOK_URL="${{ secrets.DISCORD_DEPLOY }}"
          MESSAGE="Deploy validator PROD complete"
          curl -H "Content-Type: application/json" \
          -d "{\"content\": \"$MESSAGE\"}" \
          $WEBHOOK_URL